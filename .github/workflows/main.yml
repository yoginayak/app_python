name: Publish Docker image

on:
  push:
    branches: ['main']
jobs:
  push_to_registry:
    name: push docker image
    runs-on: self-hosted
    steps:
      - name: check out the repo
        uses: actions/checkout@v3
        
      - name: login to docker hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: yogi7760/test_docker:latest 


      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          #run: echo " login successfull "

      - name: Login to Amazon ECR
        run: 
         aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REPO_URI }}

      #- name: Login to Amazon ECR Public
      #  id: login-ecr
      #  uses: aws-actions/amazon-ecr-login@v2
        #with:
         # registry-type: public
          #run: echo " trying to login to ecr"

      #- name: Build and push Docker image to ECR
       ## run: 
         # docker push ${{ secrets.ECR_REPO_URI }}:latest

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: docker_ecr
          IMAGE_TAG: ${{ gihub.sha }}
        run: |
            docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
